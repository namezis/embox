package embox.driver.audio

abstract module portaudio_api {
	@IncludeExport(path="drivers/audio")
	source "portaudio.h"
}

module portaudio_lib extends portaudio_api {
	option number max_dev_count=4
	option number log_level=0

	source "portaudio_lib.c"
	source "portaudio_info.c"
}

@BuildDepends(third_party.bsp.st_f4.core)
module stm32f4_pa extends portaudio_api {
	option number volume=70
	option number sample_rate
	option number buf_cnt=0x4
	@IncludePath("$(EXTERNAL_BUILD_DIR)/third_party/bsp/st_f4/core/STM32F4xx_Ethernet_Example/Utilities/STM32F4-Discovery/")
	source "stm32f4_pa.c"

	@IncludeExport(path="drivers/audio")
	source "portaudio.h"

	depends third_party.bsp.st_f4.core
	depends embox.util.DList
	depends embox.compat.libc.assert
	depends embox.compat.posix.util.sleep
	depends embox.mem.pool
	depends embox.mem.heap_api
	depends embox.kernel.irq_api
}

@BuildDepends(third_party.bsp.stmf4cube.core)
module stm32f4_pa_cube extends portaudio_api {
	option number volume=70
	option number sample_rate
	option number buf_cnt=0x4
	source "stm32f4_pa_cube.c"

	@IncludeExport(path="drivers/audio")
	source "portaudio.h"

	depends third_party.bsp.stmf4cube.core
	depends embox.util.DList
	depends embox.compat.libc.assert
	depends embox.compat.posix.util.sleep
	depends embox.mem.pool
	depends embox.mem.heap_api
	depends embox.kernel.irq_api
}

module portaudio_stub extends portaudio_api {
	source "portaudio_stub.c"

	depends embox.compat.posix.util.sleep
}
